# yamllint disable rule:comments-indentation

theme: "dark"

## Set the default 2FA method for new users and for when a user has a preferred method configured that has been
## disabled. This setting must be a method that is enabled.
## Options are totp, webauthn, mobile_push.
# default_2fa_method: ''

server:
    address: "tcp://:80/"
    buffers:
        read: 8192
        write: 8192
    timeouts:
        read: "6 seconds"
        write: "6 seconds"
        idle: "30 seconds"
    endpoints:
        authz:
            auth-request:
                implementation: "AuthRequest"

log:
    level: info
    format: json

telemetry:
    metrics:
        enabled: true
        address: tcp://0.0.0.0:9959

totp:
    issuer: "sso.{{ base_domain }}"

webauthn:
    display_name: "sso.{{ base_domain }}"

duo_api:
    disable: true

identity_validation:
    reset_password:
        jwt_secret: "{{ authelia.jwt_secret }}"

ntp:
    address: "udp://time.cloudflare.com:123"

authentication_backend:
    password_reset:
        disable: false

    ## Refresh Interval docs: https://www.authelia.com/c/1fa#refresh-interval
    refresh_interval: "1 minutes"

    ##
    ## LDAP (Authentication Provider)
    ##
    ## This is the recommended Authentication Provider in production
    ## because it allows Authelia to offload the stateful operations
    ## onto the LDAP service.
    ldap:
        implementation: custom
        address: "ldap://{{ ansible_wg0.ipv4.address }}:{{ network.service_ports.lldap_ldap }}"
        timeout: 5s
        start_tls: false
        attributes:
            group_name: cn
            mail: mail
            username: uid
            display_name: displayName
        base_dn: "{{ lldap_admin.base_dn }}"
        additional_users_dn: ou=people
        users_filter: "(&({username_attribute}={input})(objectClass=person))"
        additional_groups_dn: ou=groups
        groups_filter: "(member={dn})"
        user: "uid={{ lldap_admin.username }},ou=people,{{ lldap_admin.base_dn }}"
        password: "{{ lldap_admin.password }}"

password_policy:
    zxcvbn:
        enabled: true
        min_score: 3

privacy_policy:
    enabled: false

access_control:
    default_policy: deny

    networks:
        - name: internal
          networks:
              - "10.1.1.0/24"
              - "10.1.2.0/24"
              - "10.1.3.0/24"

    rules:
        ##
        ## Bypass to access SSO
        ##
        - domain:
              - "sso.{{ base_domain }}"
              - "liftlog.{{ base_domain }}"
          policy: bypass

        ##
        ## Just SSO (one factor, only account needed)
        ##
        - domain:
              - "{{ base_domain }}"
              - "start.{{ base_domain }}"
              - "media.{{ base_domain }}"
              - "jellyseerr.{{ base_domain }}"
              - "dynmap.{{ base_domain }}"
              - "liftlog.{{ base_domain }}"
          policy: one_factor

        ##
        ## Internal access without SSO
        ##
        - domain:
              - "archive.{{ base_domain }}"
              - "media.{{ base_domain }}"
              - "n8n.{{ base_domain }}"
              - "git.{{ base_domain }}"
              - "seafile.{{ base_domain }}"
          policy: bypass
          networks:
              - "internal"

        ##
        ## 2FA external (anywhere)
        ##
        - domain:
              - "n8n.{{ base_domain }}"
              - "git.{{ base_domain }}"
          policy: two_factor

        ##
        ## Media management (2FA)
        ##
        - domain:
              - "radarr.{{ base_domain }}"
              - "sonarr.{{ base_domain }}"
              - "jackett.{{ base_domain }}"
              - "deluge.{{ base_domain }}"
              - "bazarr.{{ base_domain }}"
              - "deemix.{{ base_domain }}"
          policy: two_factor
          subject:
              - ["group:lldap_admin"]
              - ["group:media"]

        ##
        ## Admin only (2FA)
        ##
        - domain:
              - "ldap.{{ base_domain }}"
              - "grafana.{{ base_domain }}"
              - "pihole.{{ base_domain }}"
              - "gallery.{{ base_domain }}"
              - "notes.{{ base_domain }}"
              - "archivebox.{{ base_domain }}"
              - "code.{{ base_domain }}"
              - "ollama.{{ base_domain }}"
              - "guacamole.{{ base_domain }}"
              - "node-red.{{ base_domain }}"
          policy: two_factor
          subject:
              - ["group:lldap_admin"]

session:
    cookies:
        - domain: "{{ base_domain }}"
          name: "{{ base_domain }}_session"
          authelia_url: "https://sso.{{ base_domain }}"
    secret: "{{ authelia.session_secret }}"
    same_site: "lax"
    inactivity: "15m"
    expiration: "1h"
    remember_me: "1M"
    redis:
        host: 127.0.0.1
        port: 6379
        database_index: 1
        password: "{{ redis.password }}"

regulation:
    max_retries: 3
    find_time: "2 minutes"
    ban_time: "5 minutes"

storage:
    encryption_key: "{{ authelia.encryption_key }}"
    postgres:
        address: "tcp://127.0.0.1:5432"
        schema: public
        database: "{{ postgresql.database }}"
        username: "{{ postgresql.username }}"
        password: "{{ postgresql.password }}"
        timeout: 5s

notifier:
    smtp:
        address: "submissions://{{ email.host }}:{{ email.port }}"
        username: "{{ email.username }}"
        password: "{{ email.password }}"
        sender: "Authelia SSO (sso.{{ base_domain }}) <{{ email.username }}>"
        subject: "[sso.{{ base_domain }}] {title}"
