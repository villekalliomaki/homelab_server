{% for service in reverse_proxy_services.internal + reverse_proxy_services.both %}
server {
    listen {{ network.exposed_ports.nginx_https_internal }} ssl;
    http2 on;

    server_name {{ service.domain }};

    # For access logs
    set $upstream_name {{ service.name }};
    set $proxy_endpoint_type internal_https;

    # TLS
    include /etc/nginx/security/tls/internal.conf;

    # Hardening
    include /etc/nginx/security/hardening_internal.conf;

    # Authelia
    include /etc/nginx/snippets/authelia_location.conf;

    # IP address filtering
    include /etc/nginx/security/geoip_check.conf;

    location / {
        # Authelia
        include /etc/nginx/snippets/proxy.conf;
        include /etc/nginx/snippets/authelia_authrequest.conf;

        # Enable websockets through 
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Reverse proxy secret to upstreamm
        proxy_set_header X-Proxy-Secret "{{ upstream_secret }}";

        # Seafile (gunicorn) won't work without this
        # proxy_set_header Host $host;
        # proxy_set_header X-Forwarded-For $remote_addr;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_set_header X-Real-IP $remote_addr;
        
        {% if service.endpoint is defined %}
        proxy_pass http://{{ service.endpoint }};
        {% elif service.redirect is defined %}
        return 301 {{ service.redirect }};
        {% else %}
        return 500;
        {% endif %}
    }
}
{% endfor %}

# Unknown host, match all -> 404
server {
    listen {{ network.exposed_ports.nginx_https_internal }} ssl default_server;
    http2 on;

    # TLS
    include /etc/nginx/security/tls/internal.conf;

    # Hardening
    include /etc/nginx/security/hardening_internal.conf;

    # IP address filtering
    include /etc/nginx/security/geoip_check.conf;

    return 404;
}