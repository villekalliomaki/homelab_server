- name: Juputer notebook
  hosts: homelab
  remote_user: root

  vars_files:
      - ../global.yml

  vars:
      service:
          name: jupyter_notebook
          user: jupyter_notebook

  tasks:
      - name: User
        ansible.builtin.import_role:
            name: service_user

      - name: Directories
        ansible.builtin.import_role:
            name: directories
        vars:
            directories_container_volume:
                create: true
                subdirectories:
                    - utu

      - name: Jupyter notebook container (this can take a while)
        become: true
        become_user: "{{ service.user }}"
        containers.podman.podman_container:
            name: "{{ service.name }}"
            state: "{{ container_state | default('started') }}"
            image: quay.io/jupyter/datascience-notebook
            log_driver: "{{ podman.log_driver }}"
            log_options:
                path: "{{ dirs_container_logs.path }}/{{ podman.container_log_file }}"
            restart_policy: "{{ podman.restart_policy | regex_replace('[^A-Za-z0-9-:]', '') }}"
            network: "{{ podman.network }}"
            publish:
                - "{{ network.internal_ip }}:{{ network.service_ports.jupyter_notebook }}:8888"
            volumes:
                - "{{ dirs_container_volume_subdirectories.results[0].path }}:/home/root/utu"
            env:
                NB_USER: root
                NB_UID: 0
                NB_GID: 0
            user: "0:0"
            # Not actually running as root, podman rootless translates service user to root inside container
            command: |
                jupyter notebook
                --allow-root
                --no-browser
                --PasswordIdentityProvider.hashed_password='argon2:$argon2id$v=19$m=10240,t=10,p=8$tSQwLZHSn8/y9z8DGzwRkg$/0w3xzaYXRxkA/zkZShGIW4NMCEsYDSa+NPCph2UlSM'
