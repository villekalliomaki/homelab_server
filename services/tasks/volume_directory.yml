# Run this as root.
#
# Returns the path to the volume directory of the service as volume_directory_output.path.
#
# A list of subdirectories is returned (if requested) as volume_subdirectory_output.results,
# which includes the paths volume_subdirectory_output.results[0].path.
#
# Container log directory is accessible with container_log_directory_output.path.
# Custom log directories are returned with custom_log_directories_output.results[0].path.
#
# If requested, cache directories are returned as cache_directory_output.results.

- name: Directory and permissions
  register: volume_directory_output
  ansible.builtin.file:
      path: "{{ filesystem.container_volumes }}/{{ service.name }}"
      state: directory
      recurse: true
      owner: "{{ service.user }}"
      group: "{{ service.user }}"
      mode: a=,u=rwx,g=rwx

- name: Always create log container directory
  register: container_log_directory_output
  ansible.builtin.file:
      path: "{{ filesystem.container_logs }}/{{ service.name }}"
      state: directory
      recurse: true
      owner: "{{ service.user }}"
      group: "{{ service.user }}"
      mode: u=rwx,g=rwx

- name: Create custom log directories if requested
  register: custom_log_directories_output
  when: volumes.logs is defined
  ansible.builtin.file:
      path: "{{ filesystem.container_logs }}/{{ service.name }}/{{ item }}"
      state: directory
      recurse: true
      owner: "{{ service.user }}"
      group: "{{ service.user }}"
      mode: a=,u=rwx,g=rwx
  loop: "{{ volumes.logs }}"

- name: Create cache directory if requested
  when: volume.cache_directories is defined
  register: cache_directory_output
  ansible.builtin.file:
      path: "{{ filesystem.cache }}/{{ service.name }}/{{ item }}"
      state: directory
      recurse: true
      owner: "{{ service.user }}"
      group: "{{ service.user }}"
      mode: u=rwx,g=rwx
  loop: "{{ volumes.cache_directories }}"

- name: Create subdirectories if requested
  when: volumes.subdirectories is defined
  register: volume_subdirectory_output
  ansible.builtin.file:
      path: "{{ filesystem.container_volumes }}/{{ service.name }}/{{ item }}"
      state: directory
      recurse: true
      owner: "{{ service.user }}"
      group: "{{ service.user }}"
      mode: a=,u=rwx,g=rwx
  loop: "{{ volumes.subdirectories }}"
