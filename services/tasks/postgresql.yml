# The database directory is given with postgresql_volume. Assumed that a pod
# exists with the same name as the service.
#
# Requires a pod with the name of the service.
#
# Nothing is returned, because the database is accessible with the default port inside
# the service container as localhost.

- name: PostgreSQL container
  become: true
  become_user: "{{ service.user }}"
  containers.podman.podman_container:
      name: "{{ service.name }}_postgresql"
      state: "{{ container_state | default('started') }}"
      pod: "{{ service.name }}"
      image: docker.io/library/postgres:16.2
      # Has to be recreated to avoid permission errors with uid mapping
      recreate: true
      restart_policy: on-failure:10
      volumes:
          # The :U at the end *should* chown the contents of the volume directory to
          # the user the container happends to be mapped to with subuid and subgid
          - "{{ postgresql_volume }}:/var/lib/postgresql/data:U"
      env:
          POSTGRES_DB: "{{ postgresql.database }}"
          POSTGRES_USER: "{{ postgresql.username }}"
          POSTGRES_PASSWORD: "{{ postgresql.password }}"
      log_driver: json-file
      log_options:
          path: "{{ container_log_directory_output.path }}/postgresql.log"
