- name: Prometheus server
  hosts: homelab
  remote_user: root

  vars_files:
      - ../global.yml

  vars:
      service:
          name: prometheus
          user: prometheus

  tasks:
      - name: User
        ansible.builtin.import_role:
            name: service_user

      - name: Directories
        ansible.builtin.import_role:
            name: directories
        vars:
            directories_container_volume:
                create: true

      - name: Generate config directories
        with_community.general.filetree: configs/prometheus
        when: item.state == 'directory'
        ansible.builtin.file:
            path: "{{ dirs_container_volume.path }}/{{ item.path }}"
            owner: "{{ service.user }}"
            group: "{{ service.user }}"
            state: directory
            mode: a=,u=rw

      - name: Generate config files
        with_community.general.filetree: configs/prometheus
        when: item.state == 'file'
        ansible.builtin.template:
            src: "{{ item.src }}"
            dest: "{{ dirs_container_volume.path }}/{{ item.path }}"
            owner: "{{ service.user }}"
            group: "{{ service.user }}"
            mode: a=,u=rw

      # - name: Find playbooks
      #   register: playbook_files_output
      #   delegate_to: 127.0.0.1
      #   ansible.builtin.find:
      #       paths: ../
      #       patterns: "*.yml"
      #       recurse: false
      #       file_type: file

      - name: Prometheus container
        become: true
        become_user: "{{ service.user }}"
        containers.podman.podman_container:
            name: "{{ service.name }}"
            state: "{{ container_state | default('started') }}"
            image: "docker.io/prom/prometheus:{{ versions.prometheus }}"
            log_driver: "{{ podman.log_driver }}"
            log_options:
                path: "{{ dirs_container_logs.path }}/{{ podman.container_log_file }}"
            restart_policy: "{{ podman.restart_policy | regex_replace('[^A-Za-z0-9-:]', '') }}"
            network: "{{ podman.network }}"
            # Map real to to nobody inside container
            userns: keep-id:uid=65534,gid=65534
            publish:
                - "{{ network.internal_ip }}:{{ network.service_ports.prometheus }}:9090"
            volumes:
                - "{{ dirs_container_volume.path }}:/prometheus"
            command: --config.file=/prometheus/general_config.yml
